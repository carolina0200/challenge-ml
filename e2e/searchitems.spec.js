// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Search items', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Search items', async function() {
    // Test name: Search items
    // Step # | name | target | value
    // 1 | open | http://localhost:4000/ | 
    await driver.get("http://localhost:4000/")
    // 2 | click | css=.form-control | 
    await driver.findElement(By.css(".form-control")).click()
    // 3 | type | css=.form-control | Celulares
    await driver.findElement(By.css(".form-control")).sendKeys("Celulares")
    // 4 | click | id=search-button | 
    await driver.findElement(By.id("search-button")).click()
    // 5 | click | css=div:nth-child(1) > .row > .col-md-9 .item__price | 
    await driver.findElement(By.css("div:nth-child(1) > .row > .col-md-9 .item__price")).click()
    // 6 | assertText | css=span > span | Celulares y Teléfonos >
    assert(await driver.findElement(By.css("span > span")).getText() == "Celulares y Teléfonos >")
    // 7 | assertText | css=.btn-primary | Comprar
    assert(await driver.findElement(By.css(".btn-primary")).getText() == "Comprar")
    // 8 | assertText | css=.item__description-title | Descripción del producto
    assert(await driver.findElement(By.css(".item__description-title")).getText() == "Descripción del producto")
  })
})
